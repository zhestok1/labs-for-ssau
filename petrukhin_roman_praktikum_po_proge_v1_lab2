#include <iostream>
#include <cmath>
#include <iomanip>
#include <map>

using namespace std;

double factorial(int n) {
    if (n == 0 || n == 1)
        return 1;
    double result = 1;
    for (int i = 2; i <= n; ++i) {
        result *= i;
    }
    return result;
}

int main() {
    double An, x, alpha_n, accuracy; // инициализируем переменные
    double prev_x = 0, prev_alpha = 0, Sn = 0;
    char answer;
    int last_iteration = 0;

    
    map<pair<double, int>, double> data;

    do {
        cout << "Enter x:\n"; // просим ввести значение x
        cin >> x; // убраны ограничения на x

        // Запрос альфа
        cout << "Enter the alpha: \n"; 
        cin >> alpha_n;
        while (alpha_n <= 0) { // проверка на отрицательное число
            cout << "The alpha must be a positive number. Try again!\n";
            cout << "Enter the alpha: \n";
            cin >> alpha_n;
        }

        if (x != prev_x || alpha_n != prev_alpha) {
            Sn = 0;
            last_iteration = 0; // сбрасываем значения
        }

        int i = last_iteration;

        do {
            cout << endl;
            // проверяем мемоизацию
            if (data.find(make_pair(x, i)) != data.end()) {
                cout << "Iteration number (-n): " << i << endl;
                An = data[make_pair(x, i)];
            } else {
                cout << "Iteration number (+n): " << i << endl;
                An = (pow(-1, i) * 2 * i * pow(x, 2 * i + 1)) / factorial(2 * i + 1);
                data[make_pair(x, i)] = An;
            }

            Sn += An;
            accuracy = abs((pow(-1, i + 1) * 2 * (i + 1) * pow(x, 2 * (i + 1) + 1)) / factorial(2 * (i + 1) + 1));

            cout << "The last summed term of the series (An): " << setprecision(12) << An << endl;
            cout << "Current partial sum (Sn): " << setprecision(12) << Sn << endl;
            cout << "Calculation accuracy (alpha): " << accuracy << endl;

            i += 1;
        } while (abs(accuracy) >= alpha_n); // продолжаем пока точность больше alpha

        prev_x = x;
        prev_alpha = alpha_n;
        last_iteration = i; // обновляем значение последней итерации

        cout << "Would you like to continue? If yes - enter Y, if no - any symbol.\n"; // запрос на продолжение программы
        cin >> answer;
    } while (answer == 'Y');

    return 0;
}
