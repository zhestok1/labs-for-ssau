#include <iostream>
#include <fstream>
#include <sstream>
#include <map>
#include <vector>
#include <string>
#include <limits>

using namespace std;

void archive(const string& inputFile, const string& outputFile) {
    ifstream inFile(inputFile);
    if (!inFile) {
        cerr << "Не удалось открыть файл для чтения." << endl;
        return;
    }

    map<string, int> dictionary;
    string word;
    int index = 0;

    while (inFile >> word) {
        if (dictionary.find(word) == dictionary.end()) { // Если дошёл до последнего значит в словаре нет
            dictionary[word] = index++;
        }
    }

    inFile.close();

    ofstream outFile(outputFile);
    if (!outFile) {
        cerr << "Не удалось открыть файл для записи." << endl;
        return;
    }

    // Записываем только уникальные слова и их индексы
    for (const auto& pair : dictionary) {
        outFile << pair.first << " " << pair.second << endl;
    }

    outFile << "---СЛОВА---" << endl; // Разделитель
    // Записываем индексы слов
    for (const auto& pair : dictionary) {
        outFile << pair.second << endl; // Запись индекса слова
    }

    outFile.close();
}

void dearchive(const string& inputFile, const string& outputFile) {
    ifstream inFile(inputFile);
    if (!inFile) {
        cerr << "Не удалось открыть файл для чтения." << endl;
        return;
    }

    map<int, string> reverseDictionary;
    string line;
    int index;

    // Читаем слово и индекс для построения обратного словаря
    while (inFile >> line >> index) {
        reverseDictionary[index] = line;
    }

    // Пропустить разделитель
    inFile.ignore(numeric_limits<streamsize>::max(), '\n');

    ofstream outFile(outputFile);
    if (!outFile) {
        cerr << "Не удалось открыть файл для записи." << endl;
        return;
    }

    // Теперь восстанавливаем слова по индексам
    while (getline(inFile, line)) {
        index = stoi(line); // Преобразование строки в индекс, делается после --слова--
        if (reverseDictionary.find(index) != reverseDictionary.end()) {
            outFile << reverseDictionary[index] << endl; // Восстанавливаем слово по индексу
        }
    }

    outFile.close();
}

int main() {
    setlocale(LC_ALL, "ru");
    string filename;
    char answer;

    cout << "Введите имя файла: ";
    cin >> filename;

    cout << "Выберите действие: \n1 - Архивация\n2 - Дехврахивация\nВведите 1 или 2: ";
    cin >> answer;

    switch (answer) {
    case '1':
        archive(filename, filename);
        cout << "Файл успешно заархивирован." << endl;
        break;
    case '2':
        dearchive(filename, filename);
        cout << "Файл успешно деарахирован." << endl;
        break;
    default:
        cout << "Неверный выбор. Пожалуйста, введите 1 или 2." << endl;
        break;
    }

    return 0;
}
